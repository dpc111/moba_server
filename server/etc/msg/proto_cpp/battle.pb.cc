// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: battle.proto

#include "battle.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace battle_msg {
class c_loginDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<c_login>
      _instance;
} _c_login_default_instance_;
class s_loginDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<s_login>
      _instance;
} _s_login_default_instance_;
class c_create_entityDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<c_create_entity>
      _instance;
} _c_create_entity_default_instance_;
class s_create_entityDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<s_create_entity>
      _instance;
} _s_create_entity_default_instance_;
}  // namespace battle_msg
namespace protobuf_battle_2eproto {
void InitDefaultsc_loginImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::battle_msg::_c_login_default_instance_;
    new (ptr) ::battle_msg::c_login();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::battle_msg::c_login::InitAsDefaultInstance();
}

void InitDefaultsc_login() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsc_loginImpl);
}

void InitDefaultss_loginImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::battle_msg::_s_login_default_instance_;
    new (ptr) ::battle_msg::s_login();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::battle_msg::s_login::InitAsDefaultInstance();
}

void InitDefaultss_login() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultss_loginImpl);
}

void InitDefaultsc_create_entityImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::battle_msg::_c_create_entity_default_instance_;
    new (ptr) ::battle_msg::c_create_entity();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::battle_msg::c_create_entity::InitAsDefaultInstance();
}

void InitDefaultsc_create_entity() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsc_create_entityImpl);
}

void InitDefaultss_create_entityImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::battle_msg::_s_create_entity_default_instance_;
    new (ptr) ::battle_msg::s_create_entity();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::battle_msg::s_create_entity::InitAsDefaultInstance();
}

void InitDefaultss_create_entity() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultss_create_entityImpl);
}

::google::protobuf::Metadata file_level_metadata[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::battle_msg::c_login, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::battle_msg::c_login, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::battle_msg::c_login, uid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::battle_msg::s_login, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::battle_msg::s_login, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::battle_msg::s_login, res_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::battle_msg::s_login, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::battle_msg::s_login, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::battle_msg::s_login, icon_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::battle_msg::s_login, camp_),
  0,
  3,
  1,
  2,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::battle_msg::c_create_entity, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::battle_msg::c_create_entity, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::battle_msg::c_create_entity, type_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::battle_msg::c_create_entity, row_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::battle_msg::c_create_entity, col_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::battle_msg::s_create_entity, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::battle_msg::s_create_entity, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::battle_msg::s_create_entity, camp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::battle_msg::s_create_entity, add_gold_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::battle_msg::s_create_entity, gold_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::battle_msg::s_create_entity, row_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::battle_msg::s_create_entity, col_),
  0,
  1,
  2,
  3,
  4,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 6, sizeof(::battle_msg::c_login)},
  { 7, 17, sizeof(::battle_msg::s_login)},
  { 22, 30, sizeof(::battle_msg::c_create_entity)},
  { 33, 43, sizeof(::battle_msg::s_create_entity)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::battle_msg::_c_login_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::battle_msg::_s_login_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::battle_msg::_c_create_entity_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::battle_msg::_s_create_entity_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "battle.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\014battle.proto\022\nbattle_msg\"\026\n\007c_login\022\013\n"
      "\003uid\030\001 \002(\003\"M\n\007s_login\022\013\n\003res\030\001 \002(\t\022\013\n\003ui"
      "d\030\002 \001(\003\022\014\n\004name\030\003 \001(\t\022\014\n\004icon\030\004 \001(\t\022\014\n\004c"
      "amp\030\005 \001(\005\"<\n\017c_create_entity\022\017\n\007type_id\030"
      "\001 \002(\005\022\013\n\003row\030\002 \002(\005\022\013\n\003col\030\003 \002(\005\"Y\n\017s_cre"
      "ate_entity\022\014\n\004camp\030\001 \002(\005\022\020\n\010add_gold\030\002 \002"
      "(\005\022\014\n\004gold\030\003 \002(\005\022\013\n\003row\030\004 \002(\005\022\013\n\003col\030\005 \002"
      "(\005"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 282);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "battle.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_battle_2eproto
namespace battle_msg {

// ===================================================================

void c_login::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int c_login::kUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

c_login::c_login()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_battle_2eproto::InitDefaultsc_login();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:battle_msg.c_login)
}
c_login::c_login(const c_login& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uid_ = from.uid_;
  // @@protoc_insertion_point(copy_constructor:battle_msg.c_login)
}

void c_login::SharedCtor() {
  _cached_size_ = 0;
  uid_ = GOOGLE_LONGLONG(0);
}

c_login::~c_login() {
  // @@protoc_insertion_point(destructor:battle_msg.c_login)
  SharedDtor();
}

void c_login::SharedDtor() {
}

void c_login::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* c_login::descriptor() {
  ::protobuf_battle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_battle_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const c_login& c_login::default_instance() {
  ::protobuf_battle_2eproto::InitDefaultsc_login();
  return *internal_default_instance();
}


void c_login::Clear() {
// @@protoc_insertion_point(message_clear_start:battle_msg.c_login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uid_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool c_login::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:battle_msg.c_login)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_uid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:battle_msg.c_login)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:battle_msg.c_login)
  return false;
#undef DO_
}

void c_login::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:battle_msg.c_login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 uid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->uid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:battle_msg.c_login)
}

::google::protobuf::uint8* c_login::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:battle_msg.c_login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 uid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->uid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:battle_msg.c_login)
  return target;
}

size_t c_login::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:battle_msg.c_login)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int64 uid = 1;
  if (has_uid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->uid());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void c_login::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:battle_msg.c_login)
  GOOGLE_DCHECK_NE(&from, this);
  const c_login* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const c_login>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:battle_msg.c_login)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:battle_msg.c_login)
    MergeFrom(*source);
  }
}

void c_login::MergeFrom(const c_login& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:battle_msg.c_login)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_uid()) {
    set_uid(from.uid());
  }
}

void c_login::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:battle_msg.c_login)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void c_login::CopyFrom(const c_login& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:battle_msg.c_login)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool c_login::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void c_login::Swap(c_login* other) {
  if (other == this) return;
  InternalSwap(other);
}
void c_login::InternalSwap(c_login* other) {
  using std::swap;
  swap(uid_, other->uid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata c_login::GetMetadata() const {
  protobuf_battle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_battle_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void s_login::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int s_login::kResFieldNumber;
const int s_login::kUidFieldNumber;
const int s_login::kNameFieldNumber;
const int s_login::kIconFieldNumber;
const int s_login::kCampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

s_login::s_login()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_battle_2eproto::InitDefaultss_login();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:battle_msg.s_login)
}
s_login::s_login(const s_login& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  res_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_res()) {
    res_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.res_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  icon_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_icon()) {
    icon_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.icon_);
  }
  ::memcpy(&uid_, &from.uid_,
    static_cast<size_t>(reinterpret_cast<char*>(&camp_) -
    reinterpret_cast<char*>(&uid_)) + sizeof(camp_));
  // @@protoc_insertion_point(copy_constructor:battle_msg.s_login)
}

void s_login::SharedCtor() {
  _cached_size_ = 0;
  res_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  icon_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&camp_) -
      reinterpret_cast<char*>(&uid_)) + sizeof(camp_));
}

s_login::~s_login() {
  // @@protoc_insertion_point(destructor:battle_msg.s_login)
  SharedDtor();
}

void s_login::SharedDtor() {
  res_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  icon_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void s_login::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* s_login::descriptor() {
  ::protobuf_battle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_battle_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const s_login& s_login::default_instance() {
  ::protobuf_battle_2eproto::InitDefaultss_login();
  return *internal_default_instance();
}


void s_login::Clear() {
// @@protoc_insertion_point(message_clear_start:battle_msg.s_login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!res_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      res_.UnsafeMutablePointer()->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      name_.UnsafeMutablePointer()->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!icon_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      icon_.UnsafeMutablePointer()->clear();
    }
  }
  if (cached_has_bits & 24u) {
    ::memset(&uid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&camp_) -
        reinterpret_cast<char*>(&uid_)) + sizeof(camp_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool s_login::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:battle_msg.s_login)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string res = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_res()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->res().data(), static_cast<int>(this->res().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "battle_msg.s_login.res");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 uid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_uid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "battle_msg.s_login.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string icon = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_icon()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->icon().data(), static_cast<int>(this->icon().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "battle_msg.s_login.icon");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 camp = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_camp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &camp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:battle_msg.s_login)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:battle_msg.s_login)
  return false;
#undef DO_
}

void s_login::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:battle_msg.s_login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string res = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->res().data(), static_cast<int>(this->res().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "battle_msg.s_login.res");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->res(), output);
  }

  // optional int64 uid = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->uid(), output);
  }

  // optional string name = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "battle_msg.s_login.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // optional string icon = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->icon().data(), static_cast<int>(this->icon().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "battle_msg.s_login.icon");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->icon(), output);
  }

  // optional int32 camp = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->camp(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:battle_msg.s_login)
}

::google::protobuf::uint8* s_login::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:battle_msg.s_login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string res = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->res().data(), static_cast<int>(this->res().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "battle_msg.s_login.res");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->res(), target);
  }

  // optional int64 uid = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->uid(), target);
  }

  // optional string name = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "battle_msg.s_login.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // optional string icon = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->icon().data(), static_cast<int>(this->icon().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "battle_msg.s_login.icon");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->icon(), target);
  }

  // optional int32 camp = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->camp(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:battle_msg.s_login)
  return target;
}

size_t s_login::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:battle_msg.s_login)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string res = 1;
  if (has_res()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->res());
  }
  if (_has_bits_[0 / 32] & 30u) {
    // optional string name = 3;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string icon = 4;
    if (has_icon()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->icon());
    }

    // optional int64 uid = 2;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uid());
    }

    // optional int32 camp = 5;
    if (has_camp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->camp());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void s_login::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:battle_msg.s_login)
  GOOGLE_DCHECK_NE(&from, this);
  const s_login* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const s_login>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:battle_msg.s_login)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:battle_msg.s_login)
    MergeFrom(*source);
  }
}

void s_login::MergeFrom(const s_login& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:battle_msg.s_login)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_res();
      res_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.res_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_icon();
      icon_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.icon_);
    }
    if (cached_has_bits & 0x00000008u) {
      uid_ = from.uid_;
    }
    if (cached_has_bits & 0x00000010u) {
      camp_ = from.camp_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void s_login::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:battle_msg.s_login)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void s_login::CopyFrom(const s_login& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:battle_msg.s_login)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool s_login::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void s_login::Swap(s_login* other) {
  if (other == this) return;
  InternalSwap(other);
}
void s_login::InternalSwap(s_login* other) {
  using std::swap;
  res_.Swap(&other->res_);
  name_.Swap(&other->name_);
  icon_.Swap(&other->icon_);
  swap(uid_, other->uid_);
  swap(camp_, other->camp_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata s_login::GetMetadata() const {
  protobuf_battle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_battle_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void c_create_entity::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int c_create_entity::kTypeIdFieldNumber;
const int c_create_entity::kRowFieldNumber;
const int c_create_entity::kColFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

c_create_entity::c_create_entity()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_battle_2eproto::InitDefaultsc_create_entity();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:battle_msg.c_create_entity)
}
c_create_entity::c_create_entity(const c_create_entity& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&type_id_, &from.type_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&col_) -
    reinterpret_cast<char*>(&type_id_)) + sizeof(col_));
  // @@protoc_insertion_point(copy_constructor:battle_msg.c_create_entity)
}

void c_create_entity::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&type_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&col_) -
      reinterpret_cast<char*>(&type_id_)) + sizeof(col_));
}

c_create_entity::~c_create_entity() {
  // @@protoc_insertion_point(destructor:battle_msg.c_create_entity)
  SharedDtor();
}

void c_create_entity::SharedDtor() {
}

void c_create_entity::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* c_create_entity::descriptor() {
  ::protobuf_battle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_battle_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const c_create_entity& c_create_entity::default_instance() {
  ::protobuf_battle_2eproto::InitDefaultsc_create_entity();
  return *internal_default_instance();
}


void c_create_entity::Clear() {
// @@protoc_insertion_point(message_clear_start:battle_msg.c_create_entity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&type_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&col_) -
        reinterpret_cast<char*>(&type_id_)) + sizeof(col_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool c_create_entity::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:battle_msg.c_create_entity)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 type_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_type_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 row = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_row();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &row_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 col = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_col();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &col_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:battle_msg.c_create_entity)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:battle_msg.c_create_entity)
  return false;
#undef DO_
}

void c_create_entity::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:battle_msg.c_create_entity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 type_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type_id(), output);
  }

  // required int32 row = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->row(), output);
  }

  // required int32 col = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->col(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:battle_msg.c_create_entity)
}

::google::protobuf::uint8* c_create_entity::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:battle_msg.c_create_entity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 type_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type_id(), target);
  }

  // required int32 row = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->row(), target);
  }

  // required int32 col = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->col(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:battle_msg.c_create_entity)
  return target;
}

size_t c_create_entity::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:battle_msg.c_create_entity)
  size_t total_size = 0;

  if (has_type_id()) {
    // required int32 type_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type_id());
  }

  if (has_row()) {
    // required int32 row = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->row());
  }

  if (has_col()) {
    // required int32 col = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->col());
  }

  return total_size;
}
size_t c_create_entity::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:battle_msg.c_create_entity)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int32 type_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type_id());

    // required int32 row = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->row());

    // required int32 col = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->col());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void c_create_entity::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:battle_msg.c_create_entity)
  GOOGLE_DCHECK_NE(&from, this);
  const c_create_entity* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const c_create_entity>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:battle_msg.c_create_entity)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:battle_msg.c_create_entity)
    MergeFrom(*source);
  }
}

void c_create_entity::MergeFrom(const c_create_entity& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:battle_msg.c_create_entity)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      type_id_ = from.type_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      row_ = from.row_;
    }
    if (cached_has_bits & 0x00000004u) {
      col_ = from.col_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void c_create_entity::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:battle_msg.c_create_entity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void c_create_entity::CopyFrom(const c_create_entity& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:battle_msg.c_create_entity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool c_create_entity::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void c_create_entity::Swap(c_create_entity* other) {
  if (other == this) return;
  InternalSwap(other);
}
void c_create_entity::InternalSwap(c_create_entity* other) {
  using std::swap;
  swap(type_id_, other->type_id_);
  swap(row_, other->row_);
  swap(col_, other->col_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata c_create_entity::GetMetadata() const {
  protobuf_battle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_battle_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void s_create_entity::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int s_create_entity::kCampFieldNumber;
const int s_create_entity::kAddGoldFieldNumber;
const int s_create_entity::kGoldFieldNumber;
const int s_create_entity::kRowFieldNumber;
const int s_create_entity::kColFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

s_create_entity::s_create_entity()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_battle_2eproto::InitDefaultss_create_entity();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:battle_msg.s_create_entity)
}
s_create_entity::s_create_entity(const s_create_entity& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&camp_, &from.camp_,
    static_cast<size_t>(reinterpret_cast<char*>(&col_) -
    reinterpret_cast<char*>(&camp_)) + sizeof(col_));
  // @@protoc_insertion_point(copy_constructor:battle_msg.s_create_entity)
}

void s_create_entity::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&camp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&col_) -
      reinterpret_cast<char*>(&camp_)) + sizeof(col_));
}

s_create_entity::~s_create_entity() {
  // @@protoc_insertion_point(destructor:battle_msg.s_create_entity)
  SharedDtor();
}

void s_create_entity::SharedDtor() {
}

void s_create_entity::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* s_create_entity::descriptor() {
  ::protobuf_battle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_battle_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const s_create_entity& s_create_entity::default_instance() {
  ::protobuf_battle_2eproto::InitDefaultss_create_entity();
  return *internal_default_instance();
}


void s_create_entity::Clear() {
// @@protoc_insertion_point(message_clear_start:battle_msg.s_create_entity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    ::memset(&camp_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&col_) -
        reinterpret_cast<char*>(&camp_)) + sizeof(col_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool s_create_entity::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:battle_msg.s_create_entity)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 camp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_camp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &camp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 add_gold = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_add_gold();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &add_gold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 gold = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_gold();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 row = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_row();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &row_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 col = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_col();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &col_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:battle_msg.s_create_entity)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:battle_msg.s_create_entity)
  return false;
#undef DO_
}

void s_create_entity::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:battle_msg.s_create_entity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 camp = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->camp(), output);
  }

  // required int32 add_gold = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->add_gold(), output);
  }

  // required int32 gold = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->gold(), output);
  }

  // required int32 row = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->row(), output);
  }

  // required int32 col = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->col(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:battle_msg.s_create_entity)
}

::google::protobuf::uint8* s_create_entity::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:battle_msg.s_create_entity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 camp = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->camp(), target);
  }

  // required int32 add_gold = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->add_gold(), target);
  }

  // required int32 gold = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->gold(), target);
  }

  // required int32 row = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->row(), target);
  }

  // required int32 col = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->col(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:battle_msg.s_create_entity)
  return target;
}

size_t s_create_entity::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:battle_msg.s_create_entity)
  size_t total_size = 0;

  if (has_camp()) {
    // required int32 camp = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->camp());
  }

  if (has_add_gold()) {
    // required int32 add_gold = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->add_gold());
  }

  if (has_gold()) {
    // required int32 gold = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->gold());
  }

  if (has_row()) {
    // required int32 row = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->row());
  }

  if (has_col()) {
    // required int32 col = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->col());
  }

  return total_size;
}
size_t s_create_entity::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:battle_msg.s_create_entity)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001f) ^ 0x0000001f) == 0) {  // All required fields are present.
    // required int32 camp = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->camp());

    // required int32 add_gold = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->add_gold());

    // required int32 gold = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->gold());

    // required int32 row = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->row());

    // required int32 col = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->col());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void s_create_entity::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:battle_msg.s_create_entity)
  GOOGLE_DCHECK_NE(&from, this);
  const s_create_entity* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const s_create_entity>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:battle_msg.s_create_entity)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:battle_msg.s_create_entity)
    MergeFrom(*source);
  }
}

void s_create_entity::MergeFrom(const s_create_entity& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:battle_msg.s_create_entity)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      camp_ = from.camp_;
    }
    if (cached_has_bits & 0x00000002u) {
      add_gold_ = from.add_gold_;
    }
    if (cached_has_bits & 0x00000004u) {
      gold_ = from.gold_;
    }
    if (cached_has_bits & 0x00000008u) {
      row_ = from.row_;
    }
    if (cached_has_bits & 0x00000010u) {
      col_ = from.col_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void s_create_entity::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:battle_msg.s_create_entity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void s_create_entity::CopyFrom(const s_create_entity& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:battle_msg.s_create_entity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool s_create_entity::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;
  return true;
}

void s_create_entity::Swap(s_create_entity* other) {
  if (other == this) return;
  InternalSwap(other);
}
void s_create_entity::InternalSwap(s_create_entity* other) {
  using std::swap;
  swap(camp_, other->camp_);
  swap(add_gold_, other->add_gold_);
  swap(gold_, other->gold_);
  swap(row_, other->row_);
  swap(col_, other->col_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata s_create_entity::GetMetadata() const {
  protobuf_battle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_battle_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace battle_msg
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::battle_msg::c_login* Arena::Create< ::battle_msg::c_login >(Arena* arena) {
  return Arena::CreateInternal< ::battle_msg::c_login >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::battle_msg::s_login* Arena::Create< ::battle_msg::s_login >(Arena* arena) {
  return Arena::CreateInternal< ::battle_msg::s_login >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::battle_msg::c_create_entity* Arena::Create< ::battle_msg::c_create_entity >(Arena* arena) {
  return Arena::CreateInternal< ::battle_msg::c_create_entity >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::battle_msg::s_create_entity* Arena::Create< ::battle_msg::s_create_entity >(Arena* arena) {
  return Arena::CreateInternal< ::battle_msg::s_create_entity >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

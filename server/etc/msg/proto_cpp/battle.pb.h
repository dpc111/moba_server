// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: battle.proto

#ifndef PROTOBUF_battle_2eproto_INCLUDED
#define PROTOBUF_battle_2eproto_INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_battle_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[4];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsc_loginImpl();
void InitDefaultsc_login();
void InitDefaultss_loginImpl();
void InitDefaultss_login();
void InitDefaultsc_create_entityImpl();
void InitDefaultsc_create_entity();
void InitDefaultss_create_entityImpl();
void InitDefaultss_create_entity();
inline void InitDefaults() {
  InitDefaultsc_login();
  InitDefaultss_login();
  InitDefaultsc_create_entity();
  InitDefaultss_create_entity();
}
}  // namespace protobuf_battle_2eproto
namespace battle_msg {
class c_create_entity;
class c_create_entityDefaultTypeInternal;
extern c_create_entityDefaultTypeInternal _c_create_entity_default_instance_;
class c_login;
class c_loginDefaultTypeInternal;
extern c_loginDefaultTypeInternal _c_login_default_instance_;
class s_create_entity;
class s_create_entityDefaultTypeInternal;
extern s_create_entityDefaultTypeInternal _s_create_entity_default_instance_;
class s_login;
class s_loginDefaultTypeInternal;
extern s_loginDefaultTypeInternal _s_login_default_instance_;
}  // namespace battle_msg
namespace google {
namespace protobuf {
template<> ::battle_msg::c_create_entity* Arena::Create< ::battle_msg::c_create_entity>(Arena*);
template<> ::battle_msg::c_login* Arena::Create< ::battle_msg::c_login>(Arena*);
template<> ::battle_msg::s_create_entity* Arena::Create< ::battle_msg::s_create_entity>(Arena*);
template<> ::battle_msg::s_login* Arena::Create< ::battle_msg::s_login>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace battle_msg {

// ===================================================================

class c_login : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:battle_msg.c_login) */ {
 public:
  c_login();
  virtual ~c_login();

  c_login(const c_login& from);

  inline c_login& operator=(const c_login& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  c_login(c_login&& from) noexcept
    : c_login() {
    *this = ::std::move(from);
  }

  inline c_login& operator=(c_login&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const c_login& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const c_login* internal_default_instance() {
    return reinterpret_cast<const c_login*>(
               &_c_login_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(c_login* other);
  friend void swap(c_login& a, c_login& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline c_login* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<c_login>(NULL);
  }

  c_login* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<c_login>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const c_login& from);
  void MergeFrom(const c_login& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(c_login* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::int64 uid() const;
  void set_uid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:battle_msg.c_login)
 private:
  void set_has_uid();
  void clear_has_uid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 uid_;
  friend struct ::protobuf_battle_2eproto::TableStruct;
  friend void ::protobuf_battle_2eproto::InitDefaultsc_loginImpl();
};
// -------------------------------------------------------------------

class s_login : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:battle_msg.s_login) */ {
 public:
  s_login();
  virtual ~s_login();

  s_login(const s_login& from);

  inline s_login& operator=(const s_login& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  s_login(s_login&& from) noexcept
    : s_login() {
    *this = ::std::move(from);
  }

  inline s_login& operator=(s_login&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const s_login& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const s_login* internal_default_instance() {
    return reinterpret_cast<const s_login*>(
               &_s_login_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(s_login* other);
  friend void swap(s_login& a, s_login& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline s_login* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<s_login>(NULL);
  }

  s_login* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<s_login>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const s_login& from);
  void MergeFrom(const s_login& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(s_login* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string res = 1;
  bool has_res() const;
  void clear_res();
  static const int kResFieldNumber = 1;
  const ::std::string& res() const;
  void set_res(const ::std::string& value);
  #if LANG_CXX11
  void set_res(::std::string&& value);
  #endif
  void set_res(const char* value);
  void set_res(const char* value, size_t size);
  ::std::string* mutable_res();
  ::std::string* release_res();
  void set_allocated_res(::std::string* res);

  // optional string name = 3;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string icon = 4;
  bool has_icon() const;
  void clear_icon();
  static const int kIconFieldNumber = 4;
  const ::std::string& icon() const;
  void set_icon(const ::std::string& value);
  #if LANG_CXX11
  void set_icon(::std::string&& value);
  #endif
  void set_icon(const char* value);
  void set_icon(const char* value, size_t size);
  ::std::string* mutable_icon();
  ::std::string* release_icon();
  void set_allocated_icon(::std::string* icon);

  // optional int64 uid = 2;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 2;
  ::google::protobuf::int64 uid() const;
  void set_uid(::google::protobuf::int64 value);

  // optional int32 camp = 5;
  bool has_camp() const;
  void clear_camp();
  static const int kCampFieldNumber = 5;
  ::google::protobuf::int32 camp() const;
  void set_camp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:battle_msg.s_login)
 private:
  void set_has_res();
  void clear_has_res();
  void set_has_uid();
  void clear_has_uid();
  void set_has_name();
  void clear_has_name();
  void set_has_icon();
  void clear_has_icon();
  void set_has_camp();
  void clear_has_camp();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr res_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr icon_;
  ::google::protobuf::int64 uid_;
  ::google::protobuf::int32 camp_;
  friend struct ::protobuf_battle_2eproto::TableStruct;
  friend void ::protobuf_battle_2eproto::InitDefaultss_loginImpl();
};
// -------------------------------------------------------------------

class c_create_entity : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:battle_msg.c_create_entity) */ {
 public:
  c_create_entity();
  virtual ~c_create_entity();

  c_create_entity(const c_create_entity& from);

  inline c_create_entity& operator=(const c_create_entity& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  c_create_entity(c_create_entity&& from) noexcept
    : c_create_entity() {
    *this = ::std::move(from);
  }

  inline c_create_entity& operator=(c_create_entity&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const c_create_entity& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const c_create_entity* internal_default_instance() {
    return reinterpret_cast<const c_create_entity*>(
               &_c_create_entity_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(c_create_entity* other);
  friend void swap(c_create_entity& a, c_create_entity& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline c_create_entity* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<c_create_entity>(NULL);
  }

  c_create_entity* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<c_create_entity>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const c_create_entity& from);
  void MergeFrom(const c_create_entity& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(c_create_entity* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 type_id = 1;
  bool has_type_id() const;
  void clear_type_id();
  static const int kTypeIdFieldNumber = 1;
  ::google::protobuf::int32 type_id() const;
  void set_type_id(::google::protobuf::int32 value);

  // required int32 row = 2;
  bool has_row() const;
  void clear_row();
  static const int kRowFieldNumber = 2;
  ::google::protobuf::int32 row() const;
  void set_row(::google::protobuf::int32 value);

  // required int32 col = 3;
  bool has_col() const;
  void clear_col();
  static const int kColFieldNumber = 3;
  ::google::protobuf::int32 col() const;
  void set_col(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:battle_msg.c_create_entity)
 private:
  void set_has_type_id();
  void clear_has_type_id();
  void set_has_row();
  void clear_has_row();
  void set_has_col();
  void clear_has_col();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 type_id_;
  ::google::protobuf::int32 row_;
  ::google::protobuf::int32 col_;
  friend struct ::protobuf_battle_2eproto::TableStruct;
  friend void ::protobuf_battle_2eproto::InitDefaultsc_create_entityImpl();
};
// -------------------------------------------------------------------

class s_create_entity : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:battle_msg.s_create_entity) */ {
 public:
  s_create_entity();
  virtual ~s_create_entity();

  s_create_entity(const s_create_entity& from);

  inline s_create_entity& operator=(const s_create_entity& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  s_create_entity(s_create_entity&& from) noexcept
    : s_create_entity() {
    *this = ::std::move(from);
  }

  inline s_create_entity& operator=(s_create_entity&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const s_create_entity& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const s_create_entity* internal_default_instance() {
    return reinterpret_cast<const s_create_entity*>(
               &_s_create_entity_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(s_create_entity* other);
  friend void swap(s_create_entity& a, s_create_entity& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline s_create_entity* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<s_create_entity>(NULL);
  }

  s_create_entity* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<s_create_entity>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const s_create_entity& from);
  void MergeFrom(const s_create_entity& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(s_create_entity* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 camp = 1;
  bool has_camp() const;
  void clear_camp();
  static const int kCampFieldNumber = 1;
  ::google::protobuf::int32 camp() const;
  void set_camp(::google::protobuf::int32 value);

  // required int32 add_gold = 2;
  bool has_add_gold() const;
  void clear_add_gold();
  static const int kAddGoldFieldNumber = 2;
  ::google::protobuf::int32 add_gold() const;
  void set_add_gold(::google::protobuf::int32 value);

  // required int32 gold = 3;
  bool has_gold() const;
  void clear_gold();
  static const int kGoldFieldNumber = 3;
  ::google::protobuf::int32 gold() const;
  void set_gold(::google::protobuf::int32 value);

  // required int32 row = 4;
  bool has_row() const;
  void clear_row();
  static const int kRowFieldNumber = 4;
  ::google::protobuf::int32 row() const;
  void set_row(::google::protobuf::int32 value);

  // required int32 col = 5;
  bool has_col() const;
  void clear_col();
  static const int kColFieldNumber = 5;
  ::google::protobuf::int32 col() const;
  void set_col(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:battle_msg.s_create_entity)
 private:
  void set_has_camp();
  void clear_has_camp();
  void set_has_add_gold();
  void clear_has_add_gold();
  void set_has_gold();
  void clear_has_gold();
  void set_has_row();
  void clear_has_row();
  void set_has_col();
  void clear_has_col();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 camp_;
  ::google::protobuf::int32 add_gold_;
  ::google::protobuf::int32 gold_;
  ::google::protobuf::int32 row_;
  ::google::protobuf::int32 col_;
  friend struct ::protobuf_battle_2eproto::TableStruct;
  friend void ::protobuf_battle_2eproto::InitDefaultss_create_entityImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// c_login

// required int64 uid = 1;
inline bool c_login::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void c_login::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void c_login::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void c_login::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::int64 c_login::uid() const {
  // @@protoc_insertion_point(field_get:battle_msg.c_login.uid)
  return uid_;
}
inline void c_login::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:battle_msg.c_login.uid)
}

// -------------------------------------------------------------------

// s_login

// required string res = 1;
inline bool s_login::has_res() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void s_login::set_has_res() {
  _has_bits_[0] |= 0x00000001u;
}
inline void s_login::clear_has_res() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void s_login::clear_res() {
  res_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_res();
}
inline const ::std::string& s_login::res() const {
  // @@protoc_insertion_point(field_get:battle_msg.s_login.res)
  return res_.GetNoArena();
}
inline void s_login::set_res(const ::std::string& value) {
  set_has_res();
  res_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:battle_msg.s_login.res)
}
#if LANG_CXX11
inline void s_login::set_res(::std::string&& value) {
  set_has_res();
  res_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:battle_msg.s_login.res)
}
#endif
inline void s_login::set_res(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_res();
  res_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:battle_msg.s_login.res)
}
inline void s_login::set_res(const char* value, size_t size) {
  set_has_res();
  res_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:battle_msg.s_login.res)
}
inline ::std::string* s_login::mutable_res() {
  set_has_res();
  // @@protoc_insertion_point(field_mutable:battle_msg.s_login.res)
  return res_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* s_login::release_res() {
  // @@protoc_insertion_point(field_release:battle_msg.s_login.res)
  clear_has_res();
  return res_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void s_login::set_allocated_res(::std::string* res) {
  if (res != NULL) {
    set_has_res();
  } else {
    clear_has_res();
  }
  res_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), res);
  // @@protoc_insertion_point(field_set_allocated:battle_msg.s_login.res)
}

// optional int64 uid = 2;
inline bool s_login::has_uid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void s_login::set_has_uid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void s_login::clear_has_uid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void s_login::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::int64 s_login::uid() const {
  // @@protoc_insertion_point(field_get:battle_msg.s_login.uid)
  return uid_;
}
inline void s_login::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:battle_msg.s_login.uid)
}

// optional string name = 3;
inline bool s_login::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void s_login::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void s_login::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void s_login::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& s_login::name() const {
  // @@protoc_insertion_point(field_get:battle_msg.s_login.name)
  return name_.GetNoArena();
}
inline void s_login::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:battle_msg.s_login.name)
}
#if LANG_CXX11
inline void s_login::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:battle_msg.s_login.name)
}
#endif
inline void s_login::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:battle_msg.s_login.name)
}
inline void s_login::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:battle_msg.s_login.name)
}
inline ::std::string* s_login::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:battle_msg.s_login.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* s_login::release_name() {
  // @@protoc_insertion_point(field_release:battle_msg.s_login.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void s_login::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:battle_msg.s_login.name)
}

// optional string icon = 4;
inline bool s_login::has_icon() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void s_login::set_has_icon() {
  _has_bits_[0] |= 0x00000004u;
}
inline void s_login::clear_has_icon() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void s_login::clear_icon() {
  icon_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_icon();
}
inline const ::std::string& s_login::icon() const {
  // @@protoc_insertion_point(field_get:battle_msg.s_login.icon)
  return icon_.GetNoArena();
}
inline void s_login::set_icon(const ::std::string& value) {
  set_has_icon();
  icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:battle_msg.s_login.icon)
}
#if LANG_CXX11
inline void s_login::set_icon(::std::string&& value) {
  set_has_icon();
  icon_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:battle_msg.s_login.icon)
}
#endif
inline void s_login::set_icon(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_icon();
  icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:battle_msg.s_login.icon)
}
inline void s_login::set_icon(const char* value, size_t size) {
  set_has_icon();
  icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:battle_msg.s_login.icon)
}
inline ::std::string* s_login::mutable_icon() {
  set_has_icon();
  // @@protoc_insertion_point(field_mutable:battle_msg.s_login.icon)
  return icon_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* s_login::release_icon() {
  // @@protoc_insertion_point(field_release:battle_msg.s_login.icon)
  clear_has_icon();
  return icon_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void s_login::set_allocated_icon(::std::string* icon) {
  if (icon != NULL) {
    set_has_icon();
  } else {
    clear_has_icon();
  }
  icon_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), icon);
  // @@protoc_insertion_point(field_set_allocated:battle_msg.s_login.icon)
}

// optional int32 camp = 5;
inline bool s_login::has_camp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void s_login::set_has_camp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void s_login::clear_has_camp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void s_login::clear_camp() {
  camp_ = 0;
  clear_has_camp();
}
inline ::google::protobuf::int32 s_login::camp() const {
  // @@protoc_insertion_point(field_get:battle_msg.s_login.camp)
  return camp_;
}
inline void s_login::set_camp(::google::protobuf::int32 value) {
  set_has_camp();
  camp_ = value;
  // @@protoc_insertion_point(field_set:battle_msg.s_login.camp)
}

// -------------------------------------------------------------------

// c_create_entity

// required int32 type_id = 1;
inline bool c_create_entity::has_type_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void c_create_entity::set_has_type_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void c_create_entity::clear_has_type_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void c_create_entity::clear_type_id() {
  type_id_ = 0;
  clear_has_type_id();
}
inline ::google::protobuf::int32 c_create_entity::type_id() const {
  // @@protoc_insertion_point(field_get:battle_msg.c_create_entity.type_id)
  return type_id_;
}
inline void c_create_entity::set_type_id(::google::protobuf::int32 value) {
  set_has_type_id();
  type_id_ = value;
  // @@protoc_insertion_point(field_set:battle_msg.c_create_entity.type_id)
}

// required int32 row = 2;
inline bool c_create_entity::has_row() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void c_create_entity::set_has_row() {
  _has_bits_[0] |= 0x00000002u;
}
inline void c_create_entity::clear_has_row() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void c_create_entity::clear_row() {
  row_ = 0;
  clear_has_row();
}
inline ::google::protobuf::int32 c_create_entity::row() const {
  // @@protoc_insertion_point(field_get:battle_msg.c_create_entity.row)
  return row_;
}
inline void c_create_entity::set_row(::google::protobuf::int32 value) {
  set_has_row();
  row_ = value;
  // @@protoc_insertion_point(field_set:battle_msg.c_create_entity.row)
}

// required int32 col = 3;
inline bool c_create_entity::has_col() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void c_create_entity::set_has_col() {
  _has_bits_[0] |= 0x00000004u;
}
inline void c_create_entity::clear_has_col() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void c_create_entity::clear_col() {
  col_ = 0;
  clear_has_col();
}
inline ::google::protobuf::int32 c_create_entity::col() const {
  // @@protoc_insertion_point(field_get:battle_msg.c_create_entity.col)
  return col_;
}
inline void c_create_entity::set_col(::google::protobuf::int32 value) {
  set_has_col();
  col_ = value;
  // @@protoc_insertion_point(field_set:battle_msg.c_create_entity.col)
}

// -------------------------------------------------------------------

// s_create_entity

// required int32 camp = 1;
inline bool s_create_entity::has_camp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void s_create_entity::set_has_camp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void s_create_entity::clear_has_camp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void s_create_entity::clear_camp() {
  camp_ = 0;
  clear_has_camp();
}
inline ::google::protobuf::int32 s_create_entity::camp() const {
  // @@protoc_insertion_point(field_get:battle_msg.s_create_entity.camp)
  return camp_;
}
inline void s_create_entity::set_camp(::google::protobuf::int32 value) {
  set_has_camp();
  camp_ = value;
  // @@protoc_insertion_point(field_set:battle_msg.s_create_entity.camp)
}

// required int32 add_gold = 2;
inline bool s_create_entity::has_add_gold() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void s_create_entity::set_has_add_gold() {
  _has_bits_[0] |= 0x00000002u;
}
inline void s_create_entity::clear_has_add_gold() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void s_create_entity::clear_add_gold() {
  add_gold_ = 0;
  clear_has_add_gold();
}
inline ::google::protobuf::int32 s_create_entity::add_gold() const {
  // @@protoc_insertion_point(field_get:battle_msg.s_create_entity.add_gold)
  return add_gold_;
}
inline void s_create_entity::set_add_gold(::google::protobuf::int32 value) {
  set_has_add_gold();
  add_gold_ = value;
  // @@protoc_insertion_point(field_set:battle_msg.s_create_entity.add_gold)
}

// required int32 gold = 3;
inline bool s_create_entity::has_gold() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void s_create_entity::set_has_gold() {
  _has_bits_[0] |= 0x00000004u;
}
inline void s_create_entity::clear_has_gold() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void s_create_entity::clear_gold() {
  gold_ = 0;
  clear_has_gold();
}
inline ::google::protobuf::int32 s_create_entity::gold() const {
  // @@protoc_insertion_point(field_get:battle_msg.s_create_entity.gold)
  return gold_;
}
inline void s_create_entity::set_gold(::google::protobuf::int32 value) {
  set_has_gold();
  gold_ = value;
  // @@protoc_insertion_point(field_set:battle_msg.s_create_entity.gold)
}

// required int32 row = 4;
inline bool s_create_entity::has_row() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void s_create_entity::set_has_row() {
  _has_bits_[0] |= 0x00000008u;
}
inline void s_create_entity::clear_has_row() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void s_create_entity::clear_row() {
  row_ = 0;
  clear_has_row();
}
inline ::google::protobuf::int32 s_create_entity::row() const {
  // @@protoc_insertion_point(field_get:battle_msg.s_create_entity.row)
  return row_;
}
inline void s_create_entity::set_row(::google::protobuf::int32 value) {
  set_has_row();
  row_ = value;
  // @@protoc_insertion_point(field_set:battle_msg.s_create_entity.row)
}

// required int32 col = 5;
inline bool s_create_entity::has_col() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void s_create_entity::set_has_col() {
  _has_bits_[0] |= 0x00000010u;
}
inline void s_create_entity::clear_has_col() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void s_create_entity::clear_col() {
  col_ = 0;
  clear_has_col();
}
inline ::google::protobuf::int32 s_create_entity::col() const {
  // @@protoc_insertion_point(field_get:battle_msg.s_create_entity.col)
  return col_;
}
inline void s_create_entity::set_col(::google::protobuf::int32 value) {
  set_has_col();
  col_ = value;
  // @@protoc_insertion_point(field_set:battle_msg.s_create_entity.col)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace battle_msg

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_battle_2eproto_INCLUDED
